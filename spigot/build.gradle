
plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        url 'https://libraries.minecraft.net/'
    }
    maven {
        url 'https://mdmc.ddns.net/maven/'
    }
    mavenLocal()
}

configurations {
    shade
    compileOnly.extendsFrom(shade)
}

dependencies {

    compileOnly("org.spigotmc:spigot:${project.ext.minecraftVersion}-R0.1-SNAPSHOT")
    //compileOnly("org.spigotmc:spigot:1.16.5-R0.1-SNAPSHOT")

    compileOnly("me.m1dnightninja.midnightcore:api:1.0-latest")
    compileOnly("me.m1dnightninja.midnightcore:spigot:1.0-latest")

    shade(project(':api'))
    shade(project(':common'))

}

processResources {
    inputs.property("version", project.ext.fullVersion)

    Map<String, ?> ex = new HashMap<>()
    ex.put("version", project.ext.fullVersion)
    ex.put("modid", project.ext.modid)
    ex.put("modname", project.ext.modname)
    ex.put("modclass", project.ext.modclass)

    filesMatching("plugin.yml") {
        expand(ex)
    }
}

shadowJar {

    setArchivesBaseName("${project.ext.archiveName}-spigot")
    configurations = [ project.getConfigurations().shade ]

    dependencies {

        include(project(':api'))
        include(project(':common'))

    }

}

artifacts {
    jar
    sourcesJar
}

publishing {

    publications {
        mavenJava(MavenPublication) {

            version = project.ext.publicationVersion

            artifact(jar)
            artifact(sourcesJar)
        }
    }

    repositories {
        maven {
            if (project.hasProperty("pubUrl")) {
                url = project.pubUrl as String
                credentials {
                    username project.pubUser as String
                    password project.pubPass as String
                }
            }
        }
    }
}